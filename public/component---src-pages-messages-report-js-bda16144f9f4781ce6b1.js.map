{"version":3,"sources":["webpack:///./src/components/message/report.js","webpack:///./src/pages/messages/report.js"],"names":["Row","idx","user","classes","makeStyles","root","boxShadow","borderBottom","useRowStyles","useState","className","key","align","status","status_message","includes","href","rel","target","style","fontSize","fontFamily","letterSpacing","textAlign","color","lineHeight","Date","sent_datetime","toLocaleDateString","toLocaleTimeString","read_datetime","Report","id","useContext","MessageContext","report","secGroups","sendReportStatus","downloadReport","sentBroadcasts","sendStatus","page","setPage","size","React","order","setOrder","orderBy","setOrderBy","rowsPerPage","maxHeight","theader","backgroundColor","fontWeight","descendingComparator","a","b","Math","min","list","length","useEffect","array","comparator","stabilizedThis","property","secGroup","find","group","broadcast","name","date","when_sent","from","to","message","display","margin","max","summary","sent","ignored","read","pending","failed","acked","justifyContent","alignContent","alignItems","onClick","message_id","marginTop","overflow","component","Paper","stickyHeader","aria-label","active","direction","event","isAsc","console","log","handleRequestSort","getComparator","map","el","index","sort","cursor","icon","faChevronLeft","getLastReportPage","messageID","faChevronRight","getNextReportPage"],"mappings":"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","file":"component---src-pages-messages-report-js-bda16144f9f4781ce6b1.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport { MessageContext } from \"../context\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { faChevronLeft, faChevronDown, faChevronRight, faLessThanEqual } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Row = ({ user }, idx) => {\n  const useRowStyles = makeStyles({\n    root: {\n      boxShadow: 'none',\n      '& > *': {\n        borderBottom: 'unset',\n      }\n    },\n  });\n  const classes = useRowStyles();\n  const [open, setOpen] = useState(false)\n\n  return (\n    <TableRow className={classes.root} key={idx}>\n      {/* <TableCell>\n        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n        </IconButton>\n      </TableCell> */}\n      <TableCell align=\"center\">\n        <p className=\"sentmessagereport\">\n          {user.status}\n        </p>\n      </TableCell>\n      <TableCell align=\"center\">\n        <p className=\"sentmessagereport\">\n          {user.user}\n        </p>\n      </TableCell>\n\n      <TableCell align=\"center\">\n        {\n          user?.status_message?.includes('http') ?\n            <a href={user.status_message} rel=\"noopener noreferrer\" target=\"_blank\">\n              Location\n          </a> :\n            user.status_message}\n\n      </TableCell>\n      <TableCell align=\"center\">\n        <div>\n          <p style={{\n            fontSize: 12,\n            fontFamily: 'Open Sans',\n            letterSpacing: '0.41px',\n            textAlign: 'right',\n            color: 'var(--text-light)',\n            lineHeight: 1.33\n          }}>\n            {new Date(user.sent_datetime).toLocaleDateString()}\n          </p>\n\n          <p style={{\n            fontSize: 12,\n            fontFamily: 'Open Sans',\n            letterSpacing: '0.41px',\n            textAlign: 'right',\n            color: 'var(--text-light)',\n            lineHeight: 1.33\n          }}>\n            {new Date(user.sent_datetime).toLocaleTimeString()}\n          </p>\n        </div>\n      </TableCell>\n      <TableCell align=\"center\">\n        <div>\n          <p style={{\n            fontSize: 12,\n            fontFamily: 'Open Sans',\n            letterSpacing: '0.41px',\n            textAlign: 'right',\n            color: 'var(--text-light)',\n            lineHeight: 1.33\n          }}>\n            {user.read_datetime ? new Date(user.read_datetime).toLocaleDateString() : 'none'}\n          </p>\n\n          <p style={{\n            fontSize: 12,\n            fontFamily: 'Open Sans',\n            letterSpacing: '0.41px',\n            textAlign: 'right',\n            color: 'var(--text-light)',\n            lineHeight: 1.33\n          }}>\n            {user.read_datetime ? new Date(user.read_datetime).toLocaleTimeString() : 'none'}\n          </p>\n        </div></TableCell>\n    </TableRow>\n  )\n}\n\n\n\n\nconst Report = ({ id }) => {\n  const { report, secGroups, sendReportStatus, downloadReport, sentBroadcasts, sendStatus } = useContext(MessageContext)\n  const [page, setPage] = useState(0)\n  const [size, setSize] = useState(25)\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('when_sent');\n  const [selected, setSelected] = React.useState([]);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const useRowStyles = makeStyles({\n    root: {\n      boxShadow: 'none',\n      maxHeight: 800,\n      '& > *': {\n        borderBottom: 'unset',\n      }\n    },\n    theader: {\n      backgroundColor: '#fff',\n      fontFamily: 'Open Sans',\n      fontSize: '14px',\n      fontWeight: 600,\n      lineHeight: 1.14,\n      letterSpacing: '1.28px',\n      // textAlign: right;\n      color: 'var(--text-light)'\n\n    }\n  });\n  const classes = useRowStyles();\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    console.log({ orderBy, property, order, isAsc })\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const getNextReportPage = (id, page, size) => {\n    sendReportStatus(id, page + 1, size)\n    setPage(page + 1)\n  }\n\n  const getLastReportPage = (id, page, size) => {\n    if (page !== 0) {\n      sendReportStatus(id, page - 1, 25)\n      setPage(page - 1)\n\n      // console.log({ newpage: page - 1 })\n      // sendStatus(page, size)\n    }\n  }\n\n  const createSortHandler = (property) => (event) => {\n    handleRequestSort(event, property);\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, sentBroadcasts.list.length - page * rowsPerPage);\n\n  useEffect(() => {\n    // no way to get accumulated number of records \n    sendReportStatus(id, 0, 25)\n  }, [])\n\n  // const broadcast = sentBroadcasts.find(broadcast => broadcast.message_id === id)\n  const secGroup = secGroups.find(group => group.id === report?.broadcast?.target) || { name: 'network' }\n  const date = new Date(report?.broadcast?.when_sent)\n  let from = page == 0 ? 1 : page * size + 1\n  let to = report?.broadcast?.report?.length < size ? report.broadcast.report.length : report?.broadcast?.report.length * (page + 1)\n\n  return (\n    <>\n      {report.broadcast ?\n        <>\n          <h3 style={{\n            // marginTop: '40px',\n            // overflow: 'scroll'\n\n          }}\n            className=\"title-report\">{report.broadcast.message}\n          </h3>\n          <p className=\"subtitle-report\">{`Sent on ${date.toLocaleDateString()} at ${date.toLocaleTimeString()} to ${secGroup.name}`}</p>\n          <div style={{\n            display: 'flex',\n            margin: '25px 0'\n\n          }}>\n            <div style={{\n              margin: '0px 15px 0 0'\n            }}>\n              <h2\n                className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {Math.max(0, report.broadcast.summary.sent)}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                sent\n              </p>\n            </div>\n            <div style={{\n              margin: '0px 15px 0 0'\n            }}>\n              <h2\n                className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {Math.max(0, report.broadcast.summary.ignored)}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                ignored\n              </p>\n            </div>\n            <div style={{\n              margin: '0px 15px 0 0'\n            }}>\n              <h2\n                className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {Math.max(0, report.broadcast.summary.read)}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                read\n              </p>\n            </div>\n            <div style={{\n              margin: '0 15px'\n            }}>\n              <h2 className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {report.broadcast.summary.pending}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                pending\n              </p>\n            </div>\n            <div style={{\n              margin: '0 15px'\n            }}>\n              <h2 className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {report.broadcast.summary.failed}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                failed\n             </p>\n            </div>\n            <div style={{\n              margin: '0 15px'\n            }}>\n              <h2 className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {report.broadcast.summary?.acked}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                acknowledged\n              </p>\n            </div>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n            <div>\n              <h2 className=\"report-table-title\">Report</h2>\n              {/* <p className=\"subtitle-report\">Lorem Ipsum</p> */}\n            </div>\n            <button className=\"downloadButton\" onClick={() => downloadReport(report.broadcast.message_id, 0, 25)}>Download</button>\n          </div>\n          <section\n            className=\"sentsection\"\n            style={{\n              marginTop: '20px',\n              overflow: 'scroll'\n            }}\n          >\n\n            <TableContainer component={Paper} className={classes.root}>\n              <Table stickyHeader aria-label=\"sticky collapsible table\">\n                <TableHead >\n                  <TableRow >\n\n                    <TableCell\n                      className={classes.theader}\n                    // align={headCell.numeric ? 'right' : 'left'}\n                    // padding={headCell.disablePadding ? 'none' : 'default'}\n                    >\n                      <TableSortLabel\n                        active={orderBy === 'when_sent'}\n                        direction={orderBy === 'when_sent' ? order : 'asc'}\n                        onClick={createSortHandler('when_sent')}\n                      >\n                        Status\n                        </TableSortLabel>\n                    </TableCell>\n                    <TableCell\n                      className={classes.theader}\n                      align=\"center\">Name</TableCell>\n                    <TableCell\n                      className={classes.theader}\n                      align=\"center\">Message</TableCell>\n                    <TableCell\n                      className={classes.theader}\n                      align=\"center\">Sent</TableCell>\n                    <TableCell\n                      className={classes.theader}\n                      align=\"center\">Read</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    stableSort(report.broadcast.report, getComparator(order, orderBy))\n                      ?.map((user, idx) => <Row user={user} key={idx} />)\n                  }\n                </TableBody>\n\n              </Table>\n            </TableContainer>\n\n\n            {/* <TablePagination\n              rowsPerPageOptions={[10, 25, 100]}\n              component=\"div\"\n              count={report.broadcast.report.length}\n              rowsPerPage={size}\n              page={page}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            /> */}\n            {report.broadcast.report.length > 0 &&\n              <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end',\n                margin: '10px 32px'\n              }}>\n\n                <FontAwesomeIcon\n                  style={{\n                    // margin: '0 20px 0 0',\n                    cursor: 'pointer'\n                  }}\n                  icon={faChevronLeft}\n                  onClick={() => {\n                    getLastReportPage(report.messageID, page, size)\n                  }}\n                />\n                {/* <p>{page == 0 ? ((page == 0 ? 1 : page) * size - 24) : }-{Math.min(sentBroadcasts.list.length, (page == 0 ? 1 : page) * size)} of {sentBroadcasts.max_entries}</p> */}\n                {/* <p>{(page == 0 ? 1 : page) * size - sentBroadcasts.list.length + 1}-{Math.min(sentBroadcasts.list.length, (page == 0 ? 1 : page) * size)} of {sentBroadcasts.max_entries}</p> */}\n                <p style={{\n                  margin: '0 20px',\n                  fontFamily: 'Open Sans',\n                  fontSize: '14px'\n                  // cursor: 'pointer'\n                }}\n                >{from} - {to} of {report.broadcast.report.length}</p>\n\n                <FontAwesomeIcon\n                  style={{\n                    // margin: '0 20px 0 0',\n                    cursor: 'pointer'\n                  }}\n                  icon={faChevronRight}\n                  onClick={() => {\n                    if (to < report.broadcast.report.length) {\n                      getNextReportPage(report.messageID, page, size)\n                    }\n                  }} />\n              </div>\n            }\n          </section>\n        </>\n        : 'loading'\n      }\n\n    </>\n\n  )\n}\n\nexport default Report","import Report from '../../components/message/report'\n\nexport default Report"],"sourceRoot":""}